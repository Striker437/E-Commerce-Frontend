import { ChangeDetectorRef, EventEmitter, NgZone, OnDestroy, OnInit } from '@angular/core';
import { ToastType } from '../toast-type';
import { Toast } from '../toast';
import * as ɵngcc0 from '@angular/core';
export declare class ToastifyToastComponent implements OnInit, OnDestroy {
    private _cd;
    private _zone;
    autoClose: number;
    hideProgressBar: boolean;
    pauseOnHover: boolean;
    pauseOnVisibilityChange: boolean;
    closeOnClick: boolean;
    toast: Toast;
    iconLibrary: 'material' | 'font-awesome' | 'none';
    dismissEvent: EventEmitter<any>;
    private autoDismissTimeout;
    private autoCloseRemaining;
    private pauseTime;
    private startTime;
    ToastType: typeof ToastType;
    running: boolean;
    constructor(_cd: ChangeDetectorRef, _zone: NgZone);
    ngOnInit(): void;
    ngOnDestroy(): void;
    startCloseTimer(): void;
    pauseCloseTimer(): void;
    clearTimerTimeout(): void;
    handleDismissButtonAction(): void;
    handleHostClick(): void;
    handleMouseEnter(): void;
    handleMouseLeave(): void;
    handleVisibilityChange(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ToastifyToastComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ToastifyToastComponent, "lib-toastify-toast", never, { "autoClose": "autoClose"; "hideProgressBar": "hideProgressBar"; "pauseOnHover": "pauseOnHover"; "pauseOnVisibilityChange": "pauseOnVisibilityChange"; "closeOnClick": "closeOnClick"; "toast": "toast"; "iconLibrary": "iconLibrary"; }, { "dismissEvent": "dismissEvent"; }, never, never>;
}

//# sourceMappingURL=toastify-toast.component.d.ts.map